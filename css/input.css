@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
    /* Rotation amount by axis */
    --X: 0deg;
    --Y: 0deg;
    --Z: 0deg;

    /* --X-mid: 0deg;
    --Y-mid: 0deg;
    --Z-mid: 0deg; */
    
    /* Sprite size, 1 = normal size */
    --Scale: 1;

    /* Animation lenght */
    --Duration: 0ms;
}

/* @property --Y {
    syntax: "<angle>";
    inherits: false;
    initial-value: 90deg;
} */

@layer utilities {
    .border-outset {
      border-style: outset;
    }

    .cell-overlay {
        clip-path: polygon(100% 35%, 100% 65%, 65% 65%, 65% 100%, 35% 100%, 35% 35%, 65% 35%);
    }
}

.board {
    /* @apply  */
}

.row {
    @apply flex w-fit;
}

.row-clear {
    @apply animate-ping;
}

.held-used {
    @apply filter grayscale-[80%];
}

.cell {
    @apply bg-gray-300 h-5 aspect-square border-gray-200 border text-xs overflow-hidden;
}

.piece, .current-piece {
    @apply border-4 border-outset relative z-10;
}

.piece::before, .current-piece::before {
    content: "";
    @apply absolute top-0 left-0 w-full h-full bg-black/60 cell-overlay z-20 blur-md;
}

.game-video {
    @apply -my-8 transition duration-500;
}

.hide-video {
    @apply opacity-0;
}

.ghost-piece {
    @apply border-4 border-red-400;
}

.i_shape-color {
    @apply bg-blue-300 border-blue-300;
}

.j_shape-color {
    @apply bg-blue-600 border-blue-600;
}

.l_shape-color {
    @apply bg-orange-400 border-orange-400;
}

.o_shape-color {
    @apply bg-yellow-300 border-yellow-300;
}

.s_shape-color {
    @apply bg-green-400 border-green-400;
}

.t_shape-color {
    @apply bg-purple-600 border-purple-600;
}

.z_shape-color {
    @apply bg-red-500 border-red-500;
}

/* Animations */

@keyframes idle {
  0% {
    transform: rotateX(0deg) rotateY(0deg);
  }

  20% {
    transform: rotateX(0deg) rotateY(360deg);
  }

  25% {
    transform: rotateX(0deg) rotateY(360deg);
  }

  45% {
    transform: rotateX(360deg) rotateY(360deg);
  }

  50% {
    transform: rotateX(360deg) rotateY(360deg);
  }

  70% {
    transform: rotateX(360deg) rotateY(0deg);
  }

  75% {
    transform: rotateX(360deg) rotateY(0deg);
  }

  95% {
    transform: rotateX(0deg) rotateY(0deg);
  }

  100% {
    transform: rotateX(0deg) rotateY(0deg);
  }
}

/* @keyframes top-right-x {
  0% {
    transform: rotateX(0deg) rotateZ(0deg);
  }

  100% {
    transform: rotateX(360deg) rotateZ(360deg);
  }
} */

/* @keyframes top-right-y {
  0% {
    transform: rotateY(0deg) rotateZ(0deg);
  }

  100% {
    transform: rotateY(360deg) rotateZ(360deg);
  }
} */

@keyframes top-right {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1);
  }

  100% {
    transform: rotateX(var(--X)) rotateY(var(--Y)) rotateZ(var(--Z)) scale(var(--Scale));
  }
}

/* @keyframes top-left-x {
  0% {
    transform: rotateX(0deg) rotateZ(0deg);
  }

  100% {
    transform: rotateX(360deg) rotateZ(-360deg);
  }
} */

/* @keyframes top-left-y {
  0% {
    transform: rotateY(0deg) rotateZ(0deg);
  }

  100% {
    transform: rotateY(360deg) rotateZ(-360deg);
  }
} */

@keyframes top-left {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1);
  }

  100% {
    transform: rotateX(var(--X)) rotateY(var(--Y)) rotateZ(var(--Z)) scale(var(--Scale));
  }
}

/* @keyframes top-spin-x {
  0% {
    transform: rotateX(0deg);
  }

  100% {
    transform: rotateX(360deg);
  }
} */

/* @keyframes top-spin-y {
  0% {
    transform: rotateY(0deg);
  }

  100% {
    transform: rotateY(360deg);
  }
} */

@keyframes container-spin {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1);
  }

  50% {
    transform: rotateX(var(--X-mid)) rotateY(var(--Y-mid)) rotateZ(var(--Z-mid)) scale(var(--Scale));
  }

  100% {
    transform: rotateX(var(--X)) rotateY(var(--Y)) rotateZ(var(--Z)) scale(1);
  }
}

.animate-idle {
  animation: idle 25s linear infinite;
}

.animate-container {
  animation: container-spin linear;
  animation-duration: var(--Duration);
}